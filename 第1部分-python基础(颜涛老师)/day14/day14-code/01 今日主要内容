一. 昨日内容回顾
    1. 生成器
        生成器的本质就是迭代器.
        创建的方式:
            1.生成器函数
                在函数中包含了yield. 可以分段的执行函数
                def func():
                    pass
                    yield 1
                    yield 2
                func() 创建一个生成器
                __next__() 可以触发一次生成器执行. 执行到下一个yield.
                            最后一个yield之后再次执行__next__()会报错. StopIteration
                send() 可以给上一个yield 位置传值
                        第一次执行不能用send() 最后一个位置也不能给传值
            2. 生成器表达式
                列表推倒式: [结果 for 变量 in 可迭代对象 if 条件筛选]
                生成器表达式: (结果 for 变量 in 可迭代对象 if 条件筛选), 没有元组推倒式
                字典推倒式: {结果(k:v) for 变量 in 可迭代对象 if 条件筛选}
                集合推倒式:  {结果(k) for 变量 in 可迭代对象 if 条件筛选} 自带去重功能
        特点:
            1. 节省内存
            2. 惰性机制
            3. 只能往前


二. 作业讲解
三. 今日主要内容
        内置函数
        预习:
            1.lambda
            2.sorted
            3.filter
            4.map
            5.递归(文件读取)
            6.简单总结之前的内容.